{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gipjonat\\\\Desktop\\\\Coding\\\\Projects\\\\AMZL\\\\partsmap\\\\Client\\\\src\\\\PolyLine.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PolyLine(props) {\n  // Using switch cases to easily create a polyline for every belt we have.\n  // Then using the translate property to move the polyline where i need it.\n  let points;\n  switch (props.type) {\n    case \"default-case\":\n      break;\n    case \"Short\":\n      points = \"0,0 25,0\";\n      break;\n    case \"Long\":\n      points = \"0,0 300,0\";\n      break;\n    case \"Medium\":\n      points = \"0,0 150,0\";\n      break;\n    case \"Segmented\":\n      points = \"0,0 10,0\";\n      break;\n    case \"Portec\":\n      points = \"0,10 0,0 10,0 \";\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"polyline\", {\n    points: points,\n    className: `${props.translate} stroke-cc-green fill-none stroke-6 hover:stroke-8 `,\n    style: props.style,\n    onClick: props.onClick,\n    name: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = PolyLine;\nexport default PolyLine;\nvar _c;\n$RefreshReg$(_c, \"PolyLine\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PolyLine","props","points","type","className","translate","style","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gipjonat/Desktop/Coding/Projects/AMZL/partsmap/Client/src/PolyLine.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction PolyLine(props) {\r\n  // Using switch cases to easily create a polyline for every belt we have.\r\n  // Then using the translate property to move the polyline where i need it.\r\n  let points;\r\n  switch (props.type) {\r\n    case \"default-case\":\r\n      break;\r\n    case \"Short\":\r\n      points = \"0,0 25,0\";\r\n      break;\r\n    case \"Long\":\r\n      points = \"0,0 300,0\";\r\n      break;\r\n    case \"Medium\":\r\n      points = \"0,0 150,0\";\r\n      break;\r\n    case \"Segmented\":\r\n      points = \"0,0 10,0\";\r\n      break;\r\n    case \"Portec\":\r\n      points = \"0,10 0,0 10,0 \";\r\n      break;\r\n  }\r\n  return (\r\n    <polyline\r\n      points={points}\r\n      className={`${props.translate} stroke-cc-green fill-none stroke-6 hover:stroke-8 `}\r\n      style={props.style}\r\n      onClick={props.onClick}\r\n      name={props.name}\r\n    ></polyline>\r\n  );\r\n}\r\n\r\nexport default PolyLine;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB;EACA;EACA,IAAIC,MAAM;EACV,QAAQD,KAAK,CAACE,IAAI;IAChB,KAAK,cAAc;MACjB;IACF,KAAK,OAAO;MACVD,MAAM,GAAG,UAAU;MACnB;IACF,KAAK,MAAM;MACTA,MAAM,GAAG,WAAW;MACpB;IACF,KAAK,QAAQ;MACXA,MAAM,GAAG,WAAW;MACpB;IACF,KAAK,WAAW;MACdA,MAAM,GAAG,UAAU;MACnB;IACF,KAAK,QAAQ;MACXA,MAAM,GAAG,gBAAgB;MACzB;EACJ;EACA,oBACEH,OAAA;IACEG,MAAM,EAAEA,MAAO;IACfE,SAAS,EAAG,GAAEH,KAAK,CAACI,SAAU,qDAAqD;IACnFC,KAAK,EAAEL,KAAK,CAACK,KAAM;IACnBC,OAAO,EAAEN,KAAK,CAACM,OAAQ;IACvBC,IAAI,EAAEP,KAAK,CAACO;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEhB;AAACC,EAAA,GAhCQb,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}