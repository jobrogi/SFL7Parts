{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gipjonat\\\\Desktop\\\\Coding\\\\Projects\\\\AMZL\\\\partsmap\\\\Client\\\\src\\\\Component-Map.jsx\",\n  _s = $RefreshSig$();\nimport PolyLine from \"./PolyLine\";\nimport { useCallback, useEffect, useState } from \"react\";\n\n// Context for component to component communication\n// import { EquipmentContext } from \"./EquipmentDataProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map({\n  onUpdate\n}) {\n  _s();\n  // Pannning Variables\n  const [pos, setPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [delta, setDelta] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Zooming Variables\n  const [scale, setScale] = useState(1);\n  const minZoom = 0.5;\n  const maxZoom = 3;\n\n  // Equipment Context\n  // const { equipment, setEquipment } = useContext(EquipmentContext);\n  // const updateEquipmentInfo = (equipmentId) => {\n  //   setEquipment(equipmentId);\n  // };\n\n  // SVG PANNING -----------------------------------------------------------------------------------------------------------------------------\n  // Sets the newX and newY const variables. Also allows for dragging.\n  const handleMouseDown = e => {\n    setDelta({\n      x: e.clientX - pos.x,\n      y: e.clientY - pos.y\n    });\n    setIsDragging(true);\n  };\n\n  // While the mouse is held down it will constantly update the newX and newY to the difference of the mouse pos and delta pos.\n  const handleMouseMove = useCallback(e => {\n    if (isDragging === true) {\n      const newX = e.clientX - delta.x;\n      const newY = e.clientY - delta.y;\n      setPos({\n        x: newX,\n        y: newY\n      });\n    }\n  });\n\n  // When the mouse button is let up it stops the dragging.\n  const handleMouseUp = e => {\n    setTimeout(() => {\n      setIsDragging(false);\n    }, 0);\n  };\n\n  // Needed for window mouse events to ensure its smooth when moving.\n  // Use effect will run once every time the page loads. Then it will re run if the hook isDragging changes.\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [isDragging, handleMouseMove]); // Re-run the effect if isDragging changes\n  //------------------------------------------------------------------------------------------------------------------------------------------\n\n  // SVG ZOOMING -----------------------------------------------------------------------------------------------------------------------------\n  // Negative Delta Y is zooming in and opposite for positive Delta Y\n  const handleWheel = e => {\n    let newScale = scale;\n    if (e.deltaY < 0) {\n      // Zoom in\n      newScale = Math.min(scale * 1.1, maxZoom);\n    } else {\n      // Zoom out\n      newScale = Math.max(scale * 0.9, minZoom);\n    }\n    setScale(newScale);\n  };\n  //------------------------------------------------------------------------------------------------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen bg-cc-dark overflow-hidden \",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \" w-full h-full text-white border-2 bg-cc-light-gray cursor-pointer shadow-2xl\"\n      // Event Handlers\n      ,\n      onMouseDown: handleMouseDown,\n      onWheel: handleWheel,\n      style: {\n        transform: `translate(${pos.x}px, ${pos.y}px) scale(${scale})`\n      },\n      viewBox: \"350 0 1500 1000\",\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        name: \"Line 1\",\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(1250px, 590px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(945px,590px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(640px,590px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Portec\",\n          style: {\n            transform: \"translate(1565px,590px) rotate(90deg)\",\n            strokeLinejoin: \"bevel\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Short\",\n          style: {\n            transform: \"translate(1565px, 605px) rotate(90deg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Portec\",\n          style: {\n            transform: \"translate(1565px,645px) rotate(180deg)\",\n            strokeLinejoin: \"bevel\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(1250px,645px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 15\n        }, (_, index) => /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Segmented\",\n          style: {\n            transform: `translate(${1235 - index * 15}px, 645px)`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        name: \"Line 2\",\n        children: [/*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(1250px, 100px\"\n          },\n          onClick: () => onUpdate(\"02300\"),\n          name: \"02300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(945px,100px\"\n          },\n          onClick: () => onUpdate(\"02310\"),\n          name: \"02310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(640px,100px\"\n          },\n          onClick: () => onUpdate(\"02320\"),\n          name: \"02320\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Portec\",\n          style: {\n            transform: \"translate(625px,100px\",\n            strokeLinejoin: \"bevel\"\n          },\n          onClick: () => onUpdate(\"02325\"),\n          name: \"02325\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Medium\",\n          style: {\n            transform: \"translate(625px, 115px) rotate(90deg)\"\n          },\n          onClick: () => onUpdate(\"02330\"),\n          name: \"02330\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Medium\",\n          style: {\n            transform: \"translate(625px, 270px) rotate(90deg)\"\n          },\n          onClick: () => onUpdate(\"02340\"),\n          name: \"02340\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Medium\",\n          style: {\n            transform: \"translate(625px, 425px) rotate(90deg)\"\n          },\n          onClick: () => onUpdate(\"02345\"),\n          name: \"02345\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Portec\",\n          style: {\n            transform: \"translate(625px,590px) rotate(270deg)\",\n            strokeLinejoin: \"bevel\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Short\",\n          style: {\n            transform: \"translate(1565px, 655px) rotate(90deg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Portec\",\n          style: {\n            transform: \"translate(1565px,695px) rotate(180deg)\",\n            strokeLinejoin: \"bevel\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(1250px,695px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 15\n        }, (_, index) => /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Segmented\",\n          style: {\n            transform: `translate(${1235 - index * 15}px, 695px)`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        name: \"Line 3\",\n        children: [/*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Long\",\n          style: {\n            transform: \"translate(1250px,745px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 15\n        }, (_, index) => /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Segmented\",\n          style: {\n            transform: `translate(${1235 - index * 15}px, 745px)`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Medium\",\n          style: {\n            transform: \"translate(1555px,745px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Short\",\n          style: {\n            transform: \"translate(1655px,745px) rotate(-35deg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Short\",\n          style: {\n            transform: \"translate(1675px,731px) rotate(-35deg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Short\",\n          style: {\n            transform: \"translate(1694px,717px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Portec\",\n          style: {\n            transform: \"translate(1734px,717px) rotate(180deg)\",\n            strokeLinejoin: \"bevel\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Short\",\n          style: {\n            transform: \"translate(1710px,745px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Portec\",\n          style: {\n            transform: \"translate(1750px,745px) rotate(90deg)\",\n            strokeLinejoin: \"bevel\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Medium\",\n          style: {\n            transform: \"translate(1734px,550px) rotate(90deg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Medium\",\n          style: {\n            transform: \"translate(1734px,395px) rotate(90deg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolyLine, {\n          type: \"Short\",\n          style: {\n            transform: \"translate(1750px,760px)  rotate(90deg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"XF1/mxKTJ5gzMLX4lnxC3by2pUU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["PolyLine","useCallback","useEffect","useState","jsxDEV","_jsxDEV","Map","onUpdate","_s","pos","setPos","x","y","delta","setDelta","isDragging","setIsDragging","scale","setScale","minZoom","maxZoom","handleMouseDown","e","clientX","clientY","handleMouseMove","newX","newY","handleMouseUp","setTimeout","window","addEventListener","removeEventListener","handleWheel","newScale","deltaY","Math","min","max","className","children","onMouseDown","onWheel","style","transform","viewBox","name","type","fileName","_jsxFileName","lineNumber","columnNumber","strokeLinejoin","Array","from","length","_","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gipjonat/Desktop/Coding/Projects/AMZL/partsmap/Client/src/Component-Map.jsx"],"sourcesContent":["import PolyLine from \"./PolyLine\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\n// Context for component to component communication\r\n// import { EquipmentContext } from \"./EquipmentDataProvider\";\r\n\r\nfunction Map({ onUpdate }) {\r\n  // Pannning Variables\r\n  const [pos, setPos] = useState({ x: 0, y: 0 });\r\n  const [delta, setDelta] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  // Zooming Variables\r\n  const [scale, setScale] = useState(1);\r\n\r\n  const minZoom = 0.5;\r\n  const maxZoom = 3;\r\n\r\n  // Equipment Context\r\n  // const { equipment, setEquipment } = useContext(EquipmentContext);\r\n  // const updateEquipmentInfo = (equipmentId) => {\r\n  //   setEquipment(equipmentId);\r\n  // };\r\n\r\n  // SVG PANNING -----------------------------------------------------------------------------------------------------------------------------\r\n  // Sets the newX and newY const variables. Also allows for dragging.\r\n  const handleMouseDown = (e) => {\r\n    setDelta({\r\n      x: e.clientX - pos.x,\r\n      y: e.clientY - pos.y,\r\n    });\r\n\r\n    setIsDragging(true);\r\n  };\r\n\r\n  // While the mouse is held down it will constantly update the newX and newY to the difference of the mouse pos and delta pos.\r\n  const handleMouseMove = useCallback((e) => {\r\n    if (isDragging === true) {\r\n      const newX = e.clientX - delta.x;\r\n      const newY = e.clientY - delta.y;\r\n\r\n      setPos({ x: newX, y: newY });\r\n    }\r\n  });\r\n\r\n  // When the mouse button is let up it stops the dragging.\r\n  const handleMouseUp = (e) => {\r\n    setTimeout(() => {\r\n      setIsDragging(false);\r\n    }, 0);\r\n  };\r\n\r\n  // Needed for window mouse events to ensure its smooth when moving.\r\n  // Use effect will run once every time the page loads. Then it will re run if the hook isDragging changes.\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n    window.addEventListener(\"mouseup\", handleMouseUp);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n      window.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n  }, [isDragging, handleMouseMove]); // Re-run the effect if isDragging changes\r\n  //------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n  // SVG ZOOMING -----------------------------------------------------------------------------------------------------------------------------\r\n  // Negative Delta Y is zooming in and opposite for positive Delta Y\r\n  const handleWheel = (e) => {\r\n    let newScale = scale;\r\n    if (e.deltaY < 0) {\r\n      // Zoom in\r\n      newScale = Math.min(scale * 1.1, maxZoom);\r\n    } else {\r\n      // Zoom out\r\n      newScale = Math.max(scale * 0.9, minZoom);\r\n    }\r\n\r\n    setScale(newScale);\r\n  };\r\n  //------------------------------------------------------------------------------------------------------------------------------------------\r\n  return (\r\n    <div className=\"w-screen h-screen bg-cc-dark overflow-hidden \">\r\n      {/* SVG */}\r\n      {/* On Mouse Down will call the handleMouseDown event. and the style will update the position of the entire SVG  */}\r\n      <svg\r\n        className=\" w-full h-full text-white border-2 bg-cc-light-gray cursor-pointer shadow-2xl\"\r\n        // Event Handlers\r\n        onMouseDown={handleMouseDown}\r\n        onWheel={handleWheel}\r\n        style={{\r\n          transform: `translate(${pos.x}px, ${pos.y}px) scale(${scale})`,\r\n        }}\r\n        viewBox=\"350 0 1500 1000\"\r\n      >\r\n        {/* 1100 + last half of 1200 side. */}\r\n        <g name=\"Line 1\" className=\"\">\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(1250px, 590px\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(945px,590px)\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(640px,590px)\" }}\r\n          />\r\n\r\n          {/* AutoSAL 1 */}\r\n          <PolyLine\r\n            type=\"Portec\"\r\n            style={{\r\n              transform: \"translate(1565px,590px) rotate(90deg)\",\r\n              strokeLinejoin: \"bevel\",\r\n            }}\r\n          />\r\n          <PolyLine\r\n            type=\"Short\"\r\n            style={{ transform: \"translate(1565px, 605px) rotate(90deg)\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Portec\"\r\n            style={{\r\n              transform: \"translate(1565px,645px) rotate(180deg)\",\r\n              strokeLinejoin: \"bevel\",\r\n            }}\r\n          />\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(1250px,645px)\" }}\r\n          />\r\n          {/* BEGIN SEGMENTS */}\r\n\r\n          {/* Loops in order to get rid of repetitive code.  */}\r\n          {Array.from({ length: 15 }, (_, index) => (\r\n            <PolyLine\r\n              key={index}\r\n              type=\"Segmented\"\r\n              style={{ transform: `translate(${1235 - index * 15}px, 645px)` }}\r\n            />\r\n          ))}\r\n        </g>\r\n\r\n        {/* 1300 + first half of 1200 side */}\r\n        {/* CHANGE ALERT, need to change between the two portecs how long that belt is on the map.  */}\r\n        <g name=\"Line 2\">\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{\r\n              transform: \"translate(1250px, 100px\",\r\n            }}\r\n            onClick={() => onUpdate(\"02300\")}\r\n            name=\"02300\"\r\n          />\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(945px,100px\" }}\r\n            onClick={() => onUpdate(\"02310\")}\r\n            name=\"02310\"\r\n          />\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(640px,100px\" }}\r\n            onClick={() => onUpdate(\"02320\")}\r\n            name=\"02320\"\r\n          />\r\n          <PolyLine\r\n            type=\"Portec\"\r\n            style={{\r\n              transform: \"translate(625px,100px\",\r\n              strokeLinejoin: \"bevel\",\r\n            }}\r\n            onClick={() => onUpdate(\"02325\")}\r\n            name=\"02325\"\r\n          />\r\n          <PolyLine\r\n            type=\"Medium\"\r\n            style={{ transform: \"translate(625px, 115px) rotate(90deg)\" }}\r\n            onClick={() => onUpdate(\"02330\")}\r\n            name=\"02330\"\r\n          />\r\n          <PolyLine\r\n            type=\"Medium\"\r\n            style={{ transform: \"translate(625px, 270px) rotate(90deg)\" }}\r\n            onClick={() => onUpdate(\"02340\")}\r\n            name=\"02340\"\r\n          />\r\n          <PolyLine\r\n            type=\"Medium\"\r\n            style={{ transform: \"translate(625px, 425px) rotate(90deg)\" }}\r\n            onClick={() => onUpdate(\"02345\")}\r\n            name=\"02345\"\r\n          />\r\n          <PolyLine\r\n            type=\"Portec\"\r\n            style={{\r\n              transform: \"translate(625px,590px) rotate(270deg)\",\r\n              strokeLinejoin: \"bevel\",\r\n            }}\r\n          />\r\n          <PolyLine\r\n            type=\"Short\"\r\n            style={{ transform: \"translate(1565px, 655px) rotate(90deg)\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Portec\"\r\n            style={{\r\n              transform: \"translate(1565px,695px) rotate(180deg)\",\r\n              strokeLinejoin: \"bevel\",\r\n            }}\r\n          />\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(1250px,695px)\" }}\r\n          />\r\n          {/* BEGIN SEGMENTS */}\r\n\r\n          {/* Loops in order to get rid of repetitive code.  */}\r\n          {Array.from({ length: 15 }, (_, index) => (\r\n            <PolyLine\r\n              key={index}\r\n              type=\"Segmented\"\r\n              style={{ transform: `translate(${1235 - index * 15}px, 695px)` }}\r\n            />\r\n          ))}\r\n        </g>\r\n\r\n        {/* Injection Line */}\r\n        <g name=\"Line 3\">\r\n          <PolyLine\r\n            type=\"Long\"\r\n            style={{ transform: \"translate(1250px,745px)\" }}\r\n          />\r\n\r\n          {/* BEGIN SEGMENTS */}\r\n\r\n          {/* Loops in order to get rid of repetitive code.  */}\r\n          {Array.from({ length: 15 }, (_, index) => (\r\n            <PolyLine\r\n              key={index}\r\n              type=\"Segmented\"\r\n              style={{ transform: `translate(${1235 - index * 15}px, 745px)` }}\r\n            />\r\n          ))}\r\n\r\n          <PolyLine\r\n            type=\"Medium\"\r\n            style={{ transform: \"translate(1555px,745px)\" }}\r\n          />\r\n          {/* Merger */}\r\n          <PolyLine\r\n            type=\"Short\"\r\n            style={{ transform: \"translate(1655px,745px) rotate(-35deg)\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Short\"\r\n            style={{ transform: \"translate(1675px,731px) rotate(-35deg)\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Short\"\r\n            style={{ transform: \"translate(1694px,717px)\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Portec\"\r\n            style={{\r\n              transform: \"translate(1734px,717px) rotate(180deg)\",\r\n              strokeLinejoin: \"bevel\",\r\n            }}\r\n          />\r\n          <PolyLine\r\n            type=\"Short\"\r\n            style={{ transform: \"translate(1710px,745px)\" }}\r\n          />\r\n\r\n          <PolyLine\r\n            type=\"Portec\"\r\n            style={{\r\n              transform: \"translate(1750px,745px) rotate(90deg)\",\r\n              strokeLinejoin: \"bevel\",\r\n            }}\r\n          />\r\n          <PolyLine\r\n            type=\"Medium\"\r\n            style={{ transform: \"translate(1734px,550px) rotate(90deg)\" }}\r\n          />\r\n          <PolyLine\r\n            type=\"Medium\"\r\n            style={{ transform: \"translate(1734px,395px) rotate(90deg)\" }}\r\n          />\r\n\r\n          <PolyLine\r\n            type=\"Short\"\r\n            style={{ transform: \"translate(1750px,760px)  rotate(90deg)\" }}\r\n          />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}