{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gipjonat\\\\Desktop\\\\Coding\\\\Projects\\\\AMZL\\\\partsmap\\\\Client\\\\src\\\\UI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UI() {\n  _s();\n  // Active and Not bool for button states.\n  const [isActive, setIsActive] = useState(true);\n  return (\n    /*#__PURE__*/\n    // The point of this Component is to dictate which part of the map is showing and what part isnt.\n    // It is easier in my opinion to change the layers of map based off the line.\n    // Changing layers based off the line will people help understand the flow of the building.\n    _jsxDEV(\"div\", {\n      className: \" fixed w-fit h-fit top-0 left-0 z-200 p-2\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: isActive ? \"fa-solid fa-caret-left text-3xl text-center w-full rotate-180 transform-all \" : \"fa-solid fa-caret-left text-3xl text-center w-full transform-all \",\n            children: \"Line 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-500 p-2 hover:border border-red-500 \",\n            children: \"Line 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-500 p-2 hover:border border-red-500 \",\n            children: \"Line 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(UI, \"WfW4ONfLptTNRpKrpfjqslD/TDc=\");\n_c = UI;\nexport default UI;\nvar _c;\n$RefreshReg$(_c, \"UI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UI","_s","isActive","setIsActive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gipjonat/Desktop/Coding/Projects/AMZL/partsmap/Client/src/UI.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction UI() {\r\n  // Active and Not bool for button states.\r\n  const [isActive, setIsActive] = useState(true);\r\n\r\n  return (\r\n    // The point of this Component is to dictate which part of the map is showing and what part isnt.\r\n    // It is easier in my opinion to change the layers of map based off the line.\r\n    // Changing layers based off the line will people help understand the flow of the building.\r\n\r\n    <div className=\" fixed w-fit h-fit top-0 left-0 z-200 p-2\">\r\n      <ul className=\"flex gap-2\">\r\n        <li>\r\n          <button\r\n            className={\r\n              isActive\r\n                ? \"fa-solid fa-caret-left text-3xl text-center w-full rotate-180 transform-all \"\r\n                : \"fa-solid fa-caret-left text-3xl text-center w-full transform-all \"\r\n            }\r\n          >\r\n            Line 1\r\n          </button>\r\n        </li>\r\n\r\n        <li>\r\n          <button className=\"bg-red-500 p-2 hover:border border-red-500 \">\r\n            Line 2\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button className=\"bg-red-500 p-2 hover:border border-red-500 \">\r\n            Line 3\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UI;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,EAAEA,CAAA,EAAG;EAAAC,EAAA;EACZ;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE9C;IAAA;IACE;IACA;IACA;IAEAE,OAAA;MAAKK,SAAS,EAAC,2CAA2C;MAAAC,QAAA,eACxDN,OAAA;QAAIK,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACxBN,OAAA;UAAAM,QAAA,eACEN,OAAA;YACEK,SAAS,EACPF,QAAQ,GACJ,8EAA8E,GAC9E,mEACL;YAAAG,QAAA,EACF;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAELV,OAAA;UAAAM,QAAA,eACEN,OAAA;YAAQK,SAAS,EAAC,6CAA6C;YAAAC,QAAA,EAAC;UAEhE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACLV,OAAA;UAAAM,QAAA,eACEN,OAAA;YAAQK,SAAS,EAAC,6CAA6C;YAAAC,QAAA,EAAC;UAEhE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;AAEV;AAACR,EAAA,CApCQD,EAAE;AAAAU,EAAA,GAAFV,EAAE;AAsCX,eAAeA,EAAE;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}